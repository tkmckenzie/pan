route.count.df = hierarchy.df %>%
mutate(source.type = ifelse(source %in% area.df$id, "area", "route"),
target.type = ifelse(target %in% area.df$id, "area", "route")) %>%
group_by(source) %>%
filter(target.type == "route") %>%
summarize(count = n(), .groups = "drop") %>%
rbind(data.frame(source = no.route.areas))
source('~/git/pan/HikeClimb/mp_pull/analysis.R', echo=TRUE)
# Count of routes by area
no.route.areas = hierarchy.df %>%
filter(source.type == "area") %>%
summarize(count = n(), .groups = "drop")
hierarchy.df = read.csv("hierarchy_data.csv", stringsAsFactors = FALSE) %>%
mutate(source.type = ifelse(source %in% area.df$id, "area", "route"),
target.type = ifelse(target %in% area.df$id, "area", "route"))
# Count of routes by area
no.route.areas = hierarchy.df %>%
filter(source.type == "area") %>%
summarize(count = n(), .groups = "drop")
no.route.areas
# Count of routes by area
no.route.areas = hierarchy.df %>%
filter(source.type == "area") %>%
group_by(source) %>%
summarize(count = n(), .groups = "drop")
no.route.areas
# Count of routes by area
no.route.areas = hierarchy.df %>%
filter(source.type == "area") %>%
group_by(source) %>%
summarize(count = n(), .groups = "drop") %>%
filter(count == 0)
no.route.areas
# Count of routes by area
target.areas = hierarchy.df %>%
filter(target.type == "area") %>%
select(area)
# Count of routes by area
target.areas = hierarchy.df %>%
filter(target.type == "area") %>%
select(target)
target.areas
# Count of routes by area
target.areas = hierarchy.df %>%
filter(target.type == "area") %>%
pull(target)
target.areas
# Count of routes by area
target.areas = hierarchy.df %>%
filter(target.type == "area") %>%
pull(target) %>%
unique()
length(unique(target.areas))
source('~/git/pan/HikeClimb/mp_pull/analysis.R', echo=TRUE)
source.areas = hierarchy.df %>%
filter(source.type == "area") %>%
pull(source) %>%
unique()
source.areas = hierarchy.df %>%
filter(source.type == "area") %>%
pull(source)
source.areas = hierarchy.df %>%
filter(source.type == "area") %>%
pull(source) %>%
unique()
no.route.areas = setdiff(target.areas, source.areas)
source('~/git/pan/HikeClimb/mp_pull/analysis.R', echo=TRUE)
route.count.df = hierarchy.df %>%
group_by(source) %>%
filter(target.type == "route") %>%
summarize(count = n(), .groups = "drop") %>%
rbind(data.frame(source = no.route.areas, count = 0)) %>%
arrange(count, source)
route.count.df
View(route.count.df)
head(hierarchy.df)
route.df
str(route.df$share_date)
route.df = read.csv("route_data.csv", stringsAsFactors = FALSE) %>%
mutate(share_date = as.Date(share_date))
route.df
str(route.df$share_date)
# Areas with recent routes
recent.route.df = route.df %>%
filter(share_date >= as.Date("2021-01-01"))
recent.route.df
library(ggplot2)
ggplot(route.df, aes(share_date)) +
geom_density()
ggplot(recent.route.df, aes(share_date)) +
geom_density()
##################################################
# Areas with recent routes
recent.route.df = route.df %>%
filter(share_date >= as.Date("2019-01-01"))
ggplot(recent.route.df, aes(share_date)) +
geom_density()
date.count.df = route.df %>%
group_by(share_date) %>%
summarize(count = n(), .groups = "drop")
date.count.df
?semi_join
?left_join
date.count.df = route.df %>%
group_by(share_date) %>%
summarize(count = n(), .groups = "drop") %>%
right_join(data.frame(share_date = seq(min(route.df$share_date), max(route.df$share_date), by = 1)), by = "share_date")
date.count.df
View(date.count.df)
tail(date.count.df)
?replace
date.count.df = route.df %>%
group_by(share_date) %>%
summarize(count = n(), .groups = "drop") %>%
right_join(data.frame(share_date = seq(min(route.df$share_date), max(route.df$share_date), by = 1)), by = "share_date") %>%
mutate(count = replace(count, is.na(count), 0))
tail(date.count.df)
date.count.df = route.df %>%
group_by(share_date) %>%
summarize(count = n(), .groups = "drop") %>%
right_join(data.frame(share_date = seq(min(route.df$share_date), max(route.df$share_date), by = 1)), by = "share_date") %>%
mutate(count = replace(count, is.na(count), 0)) %>%
rename(date = share_date) %>%
arrange(date)
tail(date.count.df)
ggplot(date.count.df, aes(date, count)) +
geom_smooth() +
theme_bw()
date.count.df = route.df %>%
group_by(share_date) %>%
summarize(count = n(), .groups = "drop") %>%
right_join(data.frame(share_date = seq(min(route.df$share_date), max(route.df$share_date), by = 1)), by = "share_date") %>%
mutate(count = replace(count, is.na(count), 0)) %>%
rename(date = share_date) %>%
arrange(date) %>%
filter(date >= as.Date("2019-01-01"))
ggplot(date.count.df, aes(date, count)) +
geom_smooth() +
theme_bw()
ggplot(date.count.df, aes(date, count)) +
geom_smooth(alpha = 0) +
theme_bw()
##################################################
# Areas with recent routes
recent.route.df = route.df %>%
filter(share_date >= as.Date("2021-01-01"))
receent.route.df
recent.route.df
recent.area.df = hierarchy.df %>%
filter(target %in% recent.route.df$id)
recent.area.df
recent.area.df = hierarchy.df %>%
filter(target %in% recent.route.df$id) %>%
group_by(source) %>%
summarize(count = n())
recent.area.df = hierarchy.df %>%
filter(target %in% recent.route.df$id) %>%
group_by(source) %>%
summarize(count = n(), .groups = "drop")
recent.area.df
recent.area.df = hierarchy.df %>%
filter(target %in% recent.route.df$id) %>%
group_by(source) %>%
summarize(count = n(), .groups = "drop") %>%
arrange(desc(count))
recent.area.df
recent.route.df
##################################################
# Areas with recent routes
recent.route.df = route.df %>%
filter(share_date >= as.Date("2021-01-01")) %>%
mutate(boulder = grepl("^Boulder", type))
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0) +
theme_bw()
date.count.df = route.df %>%
mutate(boulder = grepl("^Boulder", type)) %>%
group_by(share_date, boulder) %>%
summarize(count = n(), .groups = "drop") %>%
right_join(data.frame(share_date = seq(min(route.df$share_date), max(route.df$share_date), by = 1)), by = "share_date") %>%
mutate(count = replace(count, is.na(count), 0)) %>%
rename(date = share_date) %>%
arrange(date) %>%
filter(date >= as.Date("2019-01-01"))
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0) +
theme_bw()
?geom_smooth
install.packages("tidyquant")
install.packages("tidyquant")
install.packages("tidyquant")
install.packages("tidyquant")
rm(list = ls())
install.packages("tidyquant")
library(tidyquant)
ggplot(date.count.df, aes(date, count)) +
geom_ma(aes(color = boulder)) +
theme_bw()
source('~/git/pan/HikeClimb/mp_pull/analysis.R', echo=TRUE)
ggplot(date.count.df, aes(date, count)) +
geom_ma(aes(color = boulder), n = 7) +
theme_bw()
ggplot(date.count.df, aes(date, count)) +
geom_ma(aes(color = boulder), n = 14) +
theme_bw()
ggplot(date.count.df, aes(date, count)) +
geom_ma(aes(color = boulder), n = 14) +
theme_bw() +
theme(legend.position = "top")
sum(is.na(route.df$type))
d = route.df %>%
mutate(boulder = grepl("^Boulder", type))
sum(is.na(d$boulder))
route.df %>%
mutate(boulder = grepl("^Boulder", type)) %>%
group_by(share_date, boulder) %>%
summarize(count = n(), .groups = "drop") %>%
right_join(data.frame(share_date = seq(min(route.df$share_date), max(route.df$share_date), by = 1)), by = "share_date")
d = route.df %>%
mutate(boulder = grepl("^Boulder", type)) %>%
group_by(share_date, boulder) %>%
summarize(count = n(), .groups = "drop") %>%
right_join(data.frame(share_date = seq(min(route.df$share_date), max(route.df$share_date), by = 1)), by = "share_date")
d
d %>% filter(is.na(boulder))
expand.grid(1:3, 1:3)
str(expand.grid(1:3, 1:3))
expand.grid(a = 1:3, b = 1:3)
d = route.df %>%
mutate(boulder = grepl("^Boulder", type)) %>%
group_by(share_date, boulder) %>%
summarize(count = n(), .groups = "drop")
sum(is.na(d$boulder))
date.count.df = route.df %>%
mutate(boulder = grepl("^Boulder", type)) %>%
group_by(share_date, boulder) %>%
summarize(count = n(), .groups = "drop") %>%
right_join(expand.grid(share_date = seq(min(route.df$share_date), max(route.df$share_date), by = 1), boulder = c(TRUE, FALSE)),
by = c("share_date", "boulder")) %>%
mutate(count = replace(count, is.na(count), 0)) %>%
rename(date = share_date) %>%
arrange(date) %>%
filter(date >= as.Date("2019-01-01"))
sum(is.na(date.count.df$boulder))
ggplot(date.count.df, aes(date, count)) +
geom_ma(aes(color = boulder), n = 14) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_ma(aes(color = boulder), n = 28) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0) +
theme_bw() +
theme(legend.position = "top")
?geom_smooth
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, span = 0.25) +
theme_bw() +
theme(legend.position = "top")
date.count.df = route.df %>%
mutate(boulder = grepl("^Boulder", type)) %>%
group_by(share_date, boulder) %>%
summarize(count = n(), .groups = "drop") %>%
right_join(expand.grid(share_date = seq(min(route.df$share_date), max(route.df$share_date), by = 1), boulder = c(TRUE, FALSE)),
by = c("share_date", "boulder")) %>%
mutate(count = replace(count, is.na(count), 0)) %>%
rename(date = share_date) %>%
arrange(date) %>%
filter(date >= as.Date("2016-01-01"))
ggplot(date.count.df, aes(date, count)) +
geom_ma(aes(color = boulder), n = 28) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, span = 0.25) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, span = 0.05) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, span = 0.001) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, span = 0.00001) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, span = 1) +
theme_bw() +
theme(legend.position = "top")
?loess
?mgcv::gam
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, method = "gam", gamma = 0.1) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, method = "gam", formula = y ~ s(x, k = 3)) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, method = "gam", formula = y ~ s(x, k = 1)) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, method = "gam", formula = y ~ s(x, k = 100)) +
theme_bw() +
theme(legend.position = "top")
?s
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, method = "loess") +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, method = "loess", size = 0.25) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, method = "loess", span = 0.25) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, method = "loess", span = 0.05) +
theme_bw() +
theme(legend.position = "top")
ggplot(date.count.df, aes(date, count)) +
geom_smooth(aes(color = boulder), alpha = 0, method = "loess", span = 0.1) +
theme_bw() +
theme(legend.position = "top")
